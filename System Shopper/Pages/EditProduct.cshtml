@page
@model System_Shopper.Pages.EditProductModel
@{
    ViewData["Title"] = "Edit Product";
    if (HttpContext.User.Identity != null)
    {
        Layout = HttpContext.User.Identity.IsAuthenticated ? "_AuthenticatedLayout" : "_Layout";
    }
}

<script type="text/javascript">
    function validateInput() {
        var isValid = true;
        var productName = document.getElementById("inputProductName");
        var productType = document.getElementById("inputProductType");
        var productDescription = document.getElementById("inputProductDescription");
        var productPrice = document.getElementById("inputPrice");
        var manufacturerId = document.getElementById("inputManufacturerId");
        var productImage = document.getElementById("inputProductImage");
        var required = "This field is required.";

        if (productName.value == "") {
            isValid = false;
            document.getElementById("productNameError").innerHTML = required;
        }
        if (productType.options[productType.selectedIndex].text == "") {
            isValid = false;
            document.getElementById("productTypeError").innerHTML = required;
        }
        if (productDescription.value == "") {
            isValid = false;
            document.getElementById("productDescriptionError").innerHTML = required;
        }
        if (productPrice == "") {
            isValid = false;
            document.getElementById("productPriceError").innerHTML = required;
        }
        if (manufacturerId.options[manufacturerId.selectedIndex].text == "") {
            isValid = false;
            document.getElementById("productManufacturerError").innerHTML = required;
        }
        if (productImage.value == "") {
            isValid = false;
            document.getElementById("productImageError").innerHTML = required;
        }

        return isValid;
    }

    const textarea = document.getElementById();
    textarea.value += @Model.ExistingProduct.ProductDescription;
</script>

<form method="post">
    <div>
        <h2>Edit Product</h2>
    </div>
    <!-- Product Name -->
    <div class="row mb-3">
        <label for="inputProductName" class="col-sm-2 col-form-label"><b>Product Name:</b></label>
        <div class="col-sm-10">
            <input type="text" rows="3" class="form-control" id="inputProductName" asp-for="@Model.ExistingProduct.ProductName" />
            <span asp-validation-for="ExistingProduct.ProductName" class="text-danger" id="productNameError"></span>
        </div>
    </div>
    <!-- Product Description -->
    <div class="row mb-3">
        <label for="inputProductDescription" class="col-sm-2 col-form-label"><b>Product Description:</b></label>
        <div class="col-sm-10">
            <textarea rows="3" class="form-control" id="inputProductDescription" asp-for="@Model.ExistingProduct.ProductDescription"></textarea>
            <span asp-validation-for="ExistingProduct.ProductDescription" class="text-danger" id="productDescriptionError"></span>
        </div>
    </div>
    <!-- Product Price -->
    <div class="row mb-3">
        <label for="inputPrice" class="col-sm-2 col-form-label"><b>Price:</b></label>
        <div class="col-sm-10">
            <input type="text" placeholder="$0.00" class="form-control" id="inputPrice" asp-for="@Model.ExistingProduct.Price">
            <span asp-validation-for="ExistingProduct.Price" class="text-danger" id="productPriceError"></span>
        </div>
    </div>
    <!-- Product Manufacturer -->
    <div class="row mb-3">
        <label for="ddlManufacturers" class="col-sm-2 col-form-label"><b>Manufacturer:</b></label>
        <div class="col-sm-10">
            <select class="rounded" id="ddlManufacturers" selected="@Model.ExistingProduct.ManufacturerId" asp-for="ExistingProduct.ManufacturerId" asp-items="@Model.Manufacturers"></select>
        </div>
        <span asp-validation-for="ExistingProduct.ManufacturerId" class="text-danger" id="productManufacturerError"></span>
    </div>
    <!-- Product Type -->
    <div class="row mb-3">
        <label for="ddlProductTypes" class="col-sm-2 col-form-label"><b>Product Type:</b></label>
        <div class="col-sm-10">
            <select class="rounded" id="ddlProductTypes" asp-for="ExistingProduct.ProductType" asp-items="@Model.ProductTypes">
                <option value="" disabled selected>Select a Product Type</option>
            </select>
        </div>
    </div>
    <!-- Product Discount -->
    <div class="row mb-3">
        <label for="ddlDiscounts" class="col-sm-2 col-form-label"><b>Discount:</b></label>
        <div class="col-sm-10">
            <select class="rounded" id="ddlDiscounts" selected="@Model.ExistingProduct.DiscountId" asp-for="ExistingProduct.DiscountId" asp-items="@Model.Discounts">
                <option value="" disabled selected>Select a Discount</option>
            </select>
        </div>
    </div>
    <!-- Product Image -->
    <div class="row mb-3">
        <label for="inputProductLogo" class="col-sm-2 col-form-label"><b>Product Image:</b></label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputProductImage" asp-for="@Model.ExistingProduct.ProductImage">
            <span asp-validation-for="ExistingProduct.ProductImage" class="text-danger" id="productImageError"></span>
        </div>
    </div>
    <button type="submit" style="background-color: #FAC748;" class="btn" onclick="return validateInput()">Edit Product</button>
</form>
